#include "CameraObjectStateSceneStart.h"
#include "Renderer.h"
#include "PlayerObject.h"

CameraState CameraObjectStateSceneStart::Update(CameraObjectBase* _owner, float _deltaTime)
{
	Vector3 tmpMovePos;
	Vector3 lerpObjectPos;
	GameObject* lerpObject = _owner->GetLerpObject();
	// 追従するオブジェクトのポジションを取得
	lerpObjectPos = lerpObject->GetPosition();

	Vector3 setPosition;
	// 仮のポジションと現在のポジションで線形補間
	setPosition = Vector3::Lerp(_owner->GetPosition(), tmpMovePos, _deltaTime);

	// 線形補間したポジションをセット
	_owner->SetPosition(setPosition);

	Matrix4 view;
	// 注視先がクリア用オブジェクトに変わっているのでそのポジションを用いてview行列を更新
	view = Matrix4::CreateLookAt(_owner->GetPosition(), lerpObjectPos, Vector3::UnitZ);
	// view行列をセット
	RENDERER->SetViewMatrix(view);

	return state;
}

void CameraObjectStateSceneStart::Enter(CameraObjectBase* _owner, float _deltaTime)
{
	state = CameraState::SCENESTART;
}